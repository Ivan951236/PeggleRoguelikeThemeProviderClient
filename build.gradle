plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

group = 'com.ivan.themeprovider'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    // JGit for GitHub operations
    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.7.0.202309050840-r'
    implementation 'org.eclipse.jgit:org.eclipse.jgit.ssh.jsch:6.7.0.202309050840-r'
    
    // SnakeYAML for YAML parsing
    implementation 'org.yaml:snakeyaml:2.2'
    
    // JavaFX for Material Design 3 UI
    implementation 'org.openjfx:javafx-controls:21.0.1'
    implementation 'org.openjfx:javafx-fxml:21.0.1'
    
    // Material Design 3 components
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-material2-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-materialdesign2-pack:12.3.1'
    
    // AtlantaFX for Material Design 3 theming
    implementation 'io.github.mkpaz:atlantafx-base:2.0.1'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    
    // JSON support (for additional configuration if needed)
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.15.2'
}

javafx {
    version = '21.0.1'
    modules = ['javafx.controls', 'javafx.fxml']
}

application {
    mainClass = 'com.ivan.themeprovider.ThemeProviderClient'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes(
            'Main-Class': 'com.ivan.themeprovider.ThemeProviderClient'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}